@{
    ViewData["Title"] = "Download Project Checkpoint Submissions";
}

@model CSC.CSClassroom.WebApp.ViewModels.Submission.DownloadSubmissionViewModel

@{
    int iSectionClicked = Model.IndexForSectionStudentsView;
    List<StudentToDownload> students = null;
    if (iSectionClicked == -1)
    {
        <h2>Download @Project.Name @Checkpoint.DisplayName Submissions</h2>
    }
    else
    {
        students = Model.SectionsAndStudents[iSectionClicked].SelectedStudents;
        <h2>Select Students To Download From @Model.SectionsAndStudents[iSectionClicked].SectionName.Text</h2>
    }
}

<form asp-action="DownloadSubmissions">

    @*
         ----------------------------------------------------------
          Form Option #1: The Main download submissions form
        ----------------------------------------------------------
    *@
    <div id="mainDownloadSubmissionsForm" class="form-horizontal">
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label asp-for="Format" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <p asp-description-for="Format" class="form-control-static"></p>
                <select asp-for="Format" asp-items="Html.GetEnumSelectList<DownloadFormat>()"></select>
                <span asp-validation-for="Format" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="IncludeUnsubmitted" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <p asp-description-for="IncludeUnsubmitted" class="form-control-static"></p>
                <input asp-for="IncludeUnsubmitted" />
                <span asp-validation-for="IncludeUnsubmitted" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="SectionsAndStudents" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <p asp-description-for="SectionsAndStudents" class="form-control-static"></p>
                <table class="table-condensed">
                    @for (int i = 0; i < Model.SectionsAndStudents.Count; i++)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" asp-for="@Model.SectionsAndStudents[i].SectionName.Selected" onchange="onCheckboxChanged(this, @Html.IdFor(model => model.SectionsAndStudents[i].SectionsAndStudentsSubmitButton) )" />
                            </td>
                            <td>
                                @Model.SectionsAndStudents[i].SectionName.Text
                                <input type="hidden" asp-for="@Model.SectionsAndStudents[i].SectionName.Text" />
                                <input type="hidden" asp-for="@Model.SectionsAndStudents[i].SectionName.Value" />
                            </td>
                            <td>
                                <input asp-for="@Model.SectionsAndStudents[i].SectionsAndStudentsSubmitButton" type="submit"
                                       value="@Model.SectionsAndStudents[i].StudentSummaryDisplay" class="btn btn-link" />
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input asp-for="@Model.DownloadSubmitButton" type="submit" value="Download" class="btn btn-default" />
            </div>
        </div>
    </div>

    @*
         ----------------------------------------------------------
          Form Option #2: The select-students-from-section form
        ----------------------------------------------------------
    *@

    @for (int iSect = 0; iSect < Model.SectionsAndStudents.Count; iSect++)
    {
        if (Model.SectionsAndStudents[iSect] == null || Model.SectionsAndStudents[iSect].SelectedStudents == null)
        {
            continue;
        }

        <div id="studentSelectionForm_@(iSect)" class="form-horizontal">
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="SectionsAndStudents[iSect].SelectedStudents" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <p asp-description-for="SectionsAndStudents[iSect].SelectedStudents" class="form-control-static"></p>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    Download?
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.SectionsAndStudents[iSect].SelectedStudents[0].LastName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.SectionsAndStudents[iSect].SelectedStudents[0].FirstName)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @* TODO: TRY using the students variable to simplify the code *@
                            @for (int i = 0; i < Model.SectionsAndStudents[iSect].SelectedStudents.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <input type="checkbox" asp-for="@Model.SectionsAndStudents[iSect].SelectedStudents[i].Selected" />
                                        @* TODO: Do I need hidden controls in here to make the checkboxes work?*@
                                        <input type="hidden" asp-for="@Model.SectionsAndStudents[iSect].SelectedStudents[i].LastName" />
                                        <input type="hidden" asp-for="@Model.SectionsAndStudents[iSect].SelectedStudents[i].FirstName" />
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.SectionsAndStudents[iSect].SelectedStudents[i].LastName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.SectionsAndStudents[iSect].SelectedStudents[i].FirstName)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Continue" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</form>

<script type="text/javascript">
    $(document).ready(() => { onDocumentReady(); });

    function onDocumentReady()
    {
        // TODO: Should I use a different div or span to contain these
        // controls rather than the current div which also contains validation?

        // Primary download form: Hide / unhide entire form
        var mainDownloadSubmissionsForm = $("#mainDownloadSubmissionsForm");
        if (@iSectionClicked == -1)
        {
            mainDownloadSubmissionsForm.show();
        }
        else
        {
            mainDownloadSubmissionsForm.hide();
        }

        // Primary download form: hide / unhide the student selection links based on the
        // section checkbox state
        @for (int i = 0; i < Model.SectionsAndStudents.Count; i++)
        {
            @:onCheckboxChanged(@Html.IdFor(model => model.SectionsAndStudents[i].SectionName.Selected), @Html.IdFor(model => model.SectionsAndStudents[i].SectionsAndStudentsSubmitButton));
        }

        // Student selection forms: Hide / unhide each section's student selection form,
        // depending on which student selection link brought us here, if any
        @for (int i = 0; i < Model.SectionsAndStudents.Count; i++)
        {
            @:var studentSelectionForm = $("#studentSelectionForm_@(i)");
            @:if (studentSelectionForm.length)
            @:{
                if (i == iSectionClicked)
                {
                    @:studentSelectionForm.show();
                }
                else
                {
                    @:studentSelectionForm.hide();
                }
            @:}
        }
    }

    function onCheckboxChanged(checkbox, selectStudentsButton)
    {
        selectStudentsButton.className = checkbox.checked ? "btn btn-link" : "hidden";
    }
</script>
