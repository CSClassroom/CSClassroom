@using System.Threading.Tasks
@using CSC.CSClassroom.WebApp.ViewModels.Shared
@model ProgramQuestion

<div class="form-group">
    <label asp-for="ImportedClasses" class="col-md-2 control-label"></label>
    <div class="col-md-10">
        <p asp-description-for="ImportedClasses" class="form-control-static"></p>
        <span asp-validation-for="ImportedClasses" class="text-danger"></span>
        <table id="importedClasses" class="equal-width"></table>
    </div>
</div>

<div class="form-group">
    <label asp-for="ProgramClassName" class="col-md-2 control-label"></label>
    <div class="col-md-10">
        <p asp-description-for="ProgramClassName" class="form-control-static"></p>
        <input asp-for="ProgramClassName" class="form-control"/>
        <span asp-validation-for="ProgramClassName" class="text-danger"></span>
    </div>
</div>

<div class="form-group">
    <label asp-for="CodeConstraints" class="col-md-2 control-label"></label>
    <div class="col-md-10">
        <p asp-description-for="CodeConstraints" class="form-control-static"></p>
        <table id="codeConstraints" class="equal-width"></table>
    </div>
</div>

<div class="form-group">
    <label asp-for="InitialSubmission" class="col-md-2 control-label"></label>
    <div class="col-md-10">
        <p asp-description-for="InitialSubmission" class="form-control-static"></p>
        <span asp-validation-for="InitialSubmission" class="text-danger"></span>
        @Html.Partial($"_CodeEditor", new CodeEditorSettings
        (
            nameof(ClassQuestion.InitialSubmission),
            Model.InitialSubmission,
            revertContents: null,
            textArea: true,
            minLines: 10,
            maxLines: 150
        ))
    </div>
</div>

<div class="form-group">
    <label asp-for="Tests" class="col-md-2 control-label"></label>
    <div class="col-md-10">
        <p asp-description-for="Tests" class="form-control-static"></p>
        <table id="programTests" class="equal-width"></table>
    </div>
</div>

<div class="form-group">
    <label asp-for="AllowPartialCredit" class="col-md-2 control-label"></label>
    <div class="col-md-10">
        <p asp-description-for="AllowPartialCredit" class="form-control-static"></p>
        <input asp-for="AllowPartialCredit" class="checkbox" type="checkbox" value="true" />
        <input type="hidden" name="AllowPartialCredit" value="false" />
        <span asp-validation-for="AllowPartialCredit" class="text-danger"></span>
    </div>
</div>

<br>
@await Component.InvokeAsync(
    "DynamicTable",
    new
    {
        tableElementId = "importedClasses",
        modelExplorer = ViewData.ModelExplorer.GetExplorerForProperty(nameof(ClassQuestion.ImportedClasses)),
        properties = new[]
        {
            nameof(ImportedClass.ClassName)
        },
        orderByProp = nameof(ImportedClass.ClassName),
        startMinRows = 0,
        textAreas = false
    })

@await Component.InvokeAsync(
    "DynamicTable",
    new
    {
        tableElementId = "codeConstraints",
        modelExplorer = ViewData.ModelExplorer.GetExplorerForProperty(nameof(ProgramQuestion.CodeConstraints)),
        properties = new[]
        {
            nameof(CodeConstraint.Regex),
            nameof(CodeConstraint.Type),
            nameof(CodeConstraint.Frequency),
            nameof(CodeConstraint.ErrorMessage)
        },
        orderByProp = nameof(CodeConstraint.Order),
        startMinRows = 0,
        textAreas = false
    })

@await Component.InvokeAsync(
    "DynamicTable",
    new
    {
        tableElementId = "programTests",
        modelExplorer = ViewData.ModelExplorer.GetExplorerForProperty(nameof(ProgramQuestion.Tests)),
        properties = new[]
        {
            nameof(ProgramQuestionTest.Name),
            nameof(ProgramQuestionTest.TestDescription),
            nameof(ProgramQuestionTest.CommandLineArguments),
            nameof(ProgramQuestionTest.ExpectedOutput)
        },
        hiddenValues = new Dictionary<string, string> { ["CodeQuestionTestType"] = typeof(ProgramQuestionTest).Name },
        orderByProp = nameof(ProgramQuestionTest.Order),
        startMinRows = 1,
        textAreas = true
    })
